body.dark-mode-dark .menu-toggle-button:not(.hamburger) {
  filter: var(--button-filter-light);
}

body.dark-mode-dark button img, body.dark-mode-dark a img {
  filter: var(--button-filter-light);
}

/* Font Definitions */
@font-face {
  font-family: "Sabon";
  font-weight: normal;
  font-style: normal;
  src: url("/static/fonts/Sabon_Roman.ttf");
}
@font-face {
  font-family: "Sabon";
  font-weight: normal;
  font-style: italic;
  src: url("/static/fonts/Sabon_Italic.ttf");
}
@font-face {
  font-family: "Sabon";
  font-weight: bold;
  font-style: normal;
  src: url("/static/fonts/Sabon_Bold.ttf");
}
@font-face {
  font-family: "Sabon";
  font-weight: bold;
  font-style: italic;
  src: url("/static/fonts/Sabon_BoldItalic.ttf");
}

/* Styles applying to everything */
html {
  font-size: 100%;
}

/* Respond to iOS preferences re: font size, weight for accessibility */
@supports (font: -apple-system-body) {
  html {
    font: -apple-system-body;
  }
}

body {
  color: var(--color);
  background-color: var(--background);
  font-family: var(--font-family);
  margin: 0;
  padding: 0;
  max-width: 100vw;
  overflow-x: hidden;
}

input,
select {
  font-size: max(1rem, 16px);
}

body > header {
  text-align: center;
  /* Floats along the top of the screen */
  position: sticky;
  top: 0;
  background: var(--background);
  display: flex;
  flex-wrap: wrap;
  justify-content: space-around;
  padding: 0.5rem;
  border-bottom: 1px solid var(--menu-border-color);
  min-height: 1.5rem;
  z-index: 100;
}

body > header button {
  background: var(--background);
  border: none;
}

body > header button:hover {
  cursor: pointer;
}

body > header .page-title {
  font-variant: small-caps;
  font-size: 1.25rem;
  margin: 0;
  /* Overflows into ellipsis */
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
  max-width: calc(100vw - 6rem);
}

body > main {
  display: block;
  margin: auto;
  max-width: calc(100vw - calc(2 * var(--page-padding)));
  padding: 0.25rem;
  width: 35rem;
}

body > main.parallels {
  min-width: 90vw;
}

body > main.parallels .initial-text {
  width: 35rem;
  max-width: calc(100vw - calc(2 * var(--page-padding)));
  display: block;
  margin: 1rem auto;
}

body > main.parallels table {
  table-layout: fixed;
  border-collapse: collapse;
  border-spacing: 0;
  margin-top: 1rem;
  width: 100%;
}

body > main.parallels td {
  vertical-align: top;
  border: 1px solid var(--border-color);
  padding: 0.25rem;
}

body > main.parallels td.selected {
  background: var(--selected-background);
}

body > main.parallels tr:nth-child(2) td,
body > main.parallels tr:nth-child(3) td {
  border-bottom: 0;
  border-top: 0;
}

body > main.parallels tr:nth-child(1) td {
  border-bottom: 0;
}

body > main.parallels a {
  text-align: center;
  display: block;
}

body > main.parallels h1 {
  font-size: 1.75rem;
}

body > main.parallels h2 {
  font-size: 1.25rem;
}

@media (min-width: 767px) {
  body > main {
    width: 37.5rem;
  }
}

.centered {
  display: block;
  margin: auto;
  text-align: center;
}

.error {
  color: var(--error-color);
}

/* Hide things *only* visually, leaving them accessible to screen readers */
.screen-reader-only:not(:focus):not(:active) {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

/* Input Radio Toggles */
fieldset.toggle {
  display: flex;
  justify-content: center;
  padding: 0;
  border: none;
  margin: 0.25rem auto 0.25rem auto;
}

fieldset.toggle legend {
  display: block;
  margin: 0.5rem auto 0.125rem auto;
  font-weight: bold;
}

fieldset.toggle label {
  background: var(--ui);
  text-align: center;
  padding: 0.25rem 0.25rem;
  cursor: pointer;
  border: 1px solid var(--ui-toggle-checked-background);
  border-right: 0;
  min-width: 3rem;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  width: auto;
  max-width: min(300px, 40vw);
}

fieldset.toggle label:first-of-type {
  border-top-left-radius: var(--border-radius);
  border-bottom-left-radius: var(--border-radius);
}

fieldset.toggle label:last-of-type {
  border-right: 1px solid var(--ui-toggle-checked-background);
  border-top-right-radius: var(--border-radius);
  border-bottom-right-radius: var(--border-radius);
}

fieldset.toggle input + label {
  transition: border-color 0.15s ease-out, color 0.25s ease-out,
    background-color 0.15s ease-out, box-shadow 0.15s ease-out;
}

fieldset.toggle input:checked + label {
  background: var(--ui-toggle-checked-background);
  box-shadow: 0 0 10px rgba(var(--ui-toggle-checked-background), 0.5);
  color: var(--ui-toggle-checked-color);
  font-weight: bold;
}

fieldset.toggle input:not(:checked) + label {
  background: var(--ui-toggle-unchecked-background);
}

fieldset.toggle input:not(:checked) + label:hover, fieldset.toggle input:focus+label {
  background: var(--ui-toggle-unchecked-background-hover);
  color: var(--color);
}

/* Hide radio buttons *only* visually, leaving them accessible to screen readers */
fieldset.toggle input[type="radio"] {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

/* Stacked label-input pairs */
fieldset.stacked,
label.stacked {
  display: flex;
  flex-direction: column;
  align-items: center;
  border: none;
}

fieldset.stacked label {
  display: flex;
  flex-direction: column;
  align-items: center;
  font-weight: bold;
}

/* Global hidden class: simply removes items from the DOM flow, making them invisible both to screen readers and to visual users */
.hidden {
  display: none;
}

/* Nav Menu */
body > header {
  display: grid;
  grid-template-areas: "left title additional right";
  grid-template-columns: 6rem 1fr 4rem 2rem;
}

.menu.left {
  grid-area: left;
}

.menu.right {
  grid-area: right;
}

.additional-buttons {
  grid-area: additional;
  display: flex;
  justify-content: space-around;
  width: 4rem;
}

.menu input.menu-toggle-input {
  /* hide it */
  opacity: 0;
  /* place above both hamburgers and menu itself */
  position: absolute;
  margin: 0;
  z-index: 5;
  height: var(--nav-button-height);
  width: var(--nav-button-height);
  cursor: pointer;
}

.menu.left {
  left: 0.5rem;
}

.menu.left input.menu-toggle-input {
  left: 0.5rem;
}

.menu.right input.menu-toggle-input {
  right: 1rem;
}

.menu .menu-toggle-button {
  position: absolute;
  top: 0.5rem;
  height: var(--nav-button-height);
  width: var(--nav-button-height);
}

.menu.left .menu-toggle-button {
  left: 0.5rem;
}

.menu input.menu-toggle-input:not(:checked) ~ .menu-toggle-button {
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  transition: 0.25s ease;
}

.menu .menu-toggle-button {
  display: block;
  z-index: 3;
  width: var(--nav-button-height);
}

.menu .hamburger span {
  display: block;
  width: var(--nav-button-height);
  height: 0.1rem;
  position: relative;
  background: var(--color);
  border-radius: 0.25rem;
  z-index: 3;
  transition: transform 0.25s cubic-bezier(0.77, 0.2, 0.05, 1),
    background 0.25s cubic-bezier(0.77, 0.2, 0.05, 1), opacity 0.25s ease;
}

.menu input.menu-toggle-input:checked ~ .hamburger span {
  opacity: 1;
  transform: rotate(45deg) translate(-2px, -1px);
  background: var(--color);
  transition: 0.25s ease;
}

.menu input.menu-toggle-input:checked ~ .hamburger {
  margin-top: 0.5rem;
}

/* Hidden middle line */
.menu input.menu-toggle-input:checked ~ .hamburger span:nth-last-child(3) {
  opacity: 0;
  transform: rotate(0deg) scale(0.2, 0.2);
}

/* Reversed final line */
.menu input.menu-toggle-input:checked ~ .hamburger span:nth-last-child(2) {
  transform: rotate(-45deg) translate(0, -1px);
}

/* Slide menu in */
.menu .menu-content {
  background: var(--background);
  border-right: 1px solid var(--menu-border-color);
  position: absolute;
  top: 0;
  left: 0;
  height: 100vh;
  width: 100vw;
  max-width: 350px;
  list-style-type: none;
  -webkit-font-smoothing: antialiased;
  transition: transform 0.25s cubic-bezier(0.77, 0.2, 0.05, 1);
  z-index: 2;
}

.menu .menu-content ul {
  margin: 0;
  padding: 0;
}

.menu.left .menu-content {
  transform: translateX(-110%);
}

/* Right-menu content is an overlay */
.menu.right .menu-content,
.canticle-swap-menu .menu-content {
  display: none;
  height: auto;
  max-height: calc(90vh - 2rem);
  overflow-y: scroll;
  width: 400px;
  max-width: calc(90vw - 2rem);
  padding: 1rem;
  position: fixed;
  left: 50%;
  top: 50%;
  transform: translateX(-50%) translateY(-50%);
  z-index: -1;
}

@media (min-width: 767px) {
  .menu.right .menu-content {
    max-width: calc(90vw - 4rem);
    padding: 2rem;
  }
}

.menu.left input.menu-toggle-input:checked ~ .menu-content {
  transform: translateX(-10%);
}

.menu.right input.menu-toggle-input:checked ~ .menu-content,
.canticle-swap-menu .menu-content.shown {
  display: block;
  transform: translateX(-50%) translateY(-50%);
  z-index: 5;
}

.menu .overlay,
.canticle-swap-menu .overlay {
  opacity: 0;
  z-index: -1;
  width: 0;
}

.menu input.menu-toggle-input:checked ~ label .overlay,
.canticle-swap-menu .overlay.shown {
  opacity: 0.25;
  background: black;
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  z-index: 1;
  transition: opacity 0.25s ease;
}

.menu .menu-content li h1 {
  font-size: 1.5rem;
}

.menu .menu-content li h1 a {
  padding: 0;
}

.menu .menu-content li {
  align-items: center;
  border-bottom: 1px solid var(--menu-border-color);
  display: flex;
  height: 2rem;
  justify-content: center;
  text-align: center;
}

.menu .menu-content li:not(:first-of-type):hover {
  background: var(--nav-link-hover);
}

.menu .menu-content h1 {
  margin: 0;
  font-variant: small-caps;
}

.menu a {
  color: var(--color);
  text-decoration: none;
  padding: 0.5rem;
  width: 100%;
}

ul.reading-links,
.reading-links ul {
  list-style-type: none;
  padding: 0;
}

/* Pop-up alerts */
.alert.alert-overlay {
  opacity: 0.25;
  background: black;
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  z-index: 200;
  transition: opacity 0.25s ease;
}

.alert.alert-overlay.hidden {
  opacity: 0;
  width: 0;
  z-index: -1;
}

.alert-content {
  display: block;
  transform: translateX(-50%) translateY(-50%);
  position: fixed;
  z-index: 201;
  left: 50%;
  top: 50%;
  background: var(--background);
}

.alert-content.hidden {
  display: none;
}

l-hidden-content {
  display: block;
}